# Generated by Django 5.2.4 on 2025-08-18 19:36

import api.models
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('category', models.CharField(choices=[('Vegetables', 'Vegetables'), ('Fruits', 'Fruits'), ('Seasoning', 'Seasoning'), ('Diary', 'Diary'), ('Sweets', 'Sweets'), ('Baking', 'Baking'), ('Sauces', 'Sauces'), ('Oils', 'Oils'), ('Seeds', 'Seeds'), ('Fluids', 'Fluids')], max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30, unique=True)),
                ('category', models.CharField(choices=[('Soups and Stews', 'Soups and Stews'), ('Salads', 'Salads'), ('Meat', 'Meat'), ('Side Dishes', 'Side Dishes'), ('Desserts', 'Desserts'), ('Breakfast and Brunch', 'Breakfast and Brunch'), ('Sauces and Condiments', 'Sauces and Condiments')])),
                ('description', models.TextField(max_length=100, null=True)),
                ('cook_time', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('servings', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('difficulty', models.CharField(choices=[('Easy', 'Easy'), ('Intermediate', 'Intermediate'), ('Hard', 'Hard')])),
                ('image', models.ImageField(upload_to='images/', validators=[api.models.Recipe.validate_image_type])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Instruction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('step_number', models.PositiveIntegerField(blank=True, default=1)),
                ('data', models.TextField()),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.recipe')),
            ],
        ),
        migrations.CreateModel(
            name='RecipeIngredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('prefix', models.CharField(max_length=10)),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.ingredient')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.recipe')),
            ],
        ),
        migrations.AddField(
            model_name='recipe',
            name='ingredients',
            field=models.ManyToManyField(blank=True, through='api.RecipeIngredient', to='api.ingredient'),
        ),
        migrations.AddIndex(
            model_name='recipeingredient',
            index=models.Index(fields=['recipe', 'ingredient'], name='api_recipei_recipe__c7cfff_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='recipeingredient',
            unique_together={('recipe', 'ingredient')},
        ),
    ]
